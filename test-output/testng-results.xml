<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="13" passed="12" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-23T14:57:30 IST" name="Default suite" finished-at="2023-10-23T15:01:56 IST" duration-ms="265953">
    <groups>
    </groups>
    <test started-at="2023-10-23T14:57:30 IST" name="Default test" finished-at="2023-10-23T15:01:56 IST" duration-ms="265953">
      <class name="com.Tests.LoginTests">
        <test-method is-config="true" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T14:57:30 IST" name="SetUp" finished-at="2023-10-23T14:57:48 IST" duration-ms="18282" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.LoginTests.LoginWithBlanckCredential()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="LoginWithBlanckCredential()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T14:57:48 IST" name="LoginWithBlanckCredential" finished-at="2023-10-23T14:57:50 IST" duration-ms="1553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithBlanckCredential -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T14:57:50 IST" name="tearDown" finished-at="2023-10-23T14:57:50 IST" duration-ms="339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T14:57:50 IST" name="SetUp" finished-at="2023-10-23T14:58:12 IST" duration-ms="22309" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.LoginTests.LoginWithBlanckPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="LoginWithBlanckPassword()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T14:58:12 IST" name="LoginWithBlanckPassword" finished-at="2023-10-23T14:58:29 IST" duration-ms="16769" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//span[text()='Required'])[2]"}
  (Session info: chrome=118.0.5993.89)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.14.0', revision: 'e5a96349ce'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [e7df5745e965f77dded3c4dfd6b789c8, findElement {using=xpath, value=(//span[text()='Required'])[2]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 118.0.5993.89, chrome: {chromedriverVersion: 118.0.5993.70 (e52f33f30b91..., userDataDir: C:\Users\hp\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:65097}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:65097/devtoo..., se:cdpVersion: 118.0.5993.89, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: e7df5745e965f77dded3c4dfd6b789c8]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//span[text()='Required'])[2]"}
  (Session info: chrome=118.0.5993.89)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.14.0', revision: 'e5a96349ce'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [e7df5745e965f77dded3c4dfd6b789c8, findElement {using=xpath, value=(//span[text()='Required'])[2]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 118.0.5993.89, chrome: {chromedriverVersion: 118.0.5993.70 (e52f33f30b91..., userDataDir: C:\Users\hp\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:65097}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:65097/devtoo..., se:cdpVersion: 118.0.5993.89, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: e7df5745e965f77dded3c4dfd6b789c8
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:353)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy12.isDisplayed(Unknown Source)
at com.pom.LoginPage.RequiredErrorMessageforPassword(LoginPage.java:128)
at com.Tests.LoginTests.LoginWithBlanckPassword(LoginTests.java:129)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithBlanckPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T14:58:29 IST" name="tearDown" finished-at="2023-10-23T14:58:29 IST" duration-ms="418" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T14:58:29 IST" name="SetUp" finished-at="2023-10-23T14:58:52 IST" duration-ms="22222" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.LoginTests.LoginWithBlanckUsername()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="LoginWithBlanckUsername()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T14:58:52 IST" name="LoginWithBlanckUsername" finished-at="2023-10-23T14:58:54 IST" duration-ms="1917" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithBlanckUsername -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T14:58:54 IST" name="tearDown" finished-at="2023-10-23T14:58:54 IST" duration-ms="360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T14:58:54 IST" name="SetUp" finished-at="2023-10-23T14:59:09 IST" duration-ms="15153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.LoginTests.LoginWithInvalidCharacterCredentials()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="LoginWithInvalidCharacterCredentials()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T14:59:09 IST" name="LoginWithInvalidCharacterCredentials" finished-at="2023-10-23T14:59:12 IST" duration-ms="2875" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithInvalidCharacterCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T14:59:12 IST" name="tearDown" finished-at="2023-10-23T14:59:12 IST" duration-ms="403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T14:59:12 IST" name="SetUp" finished-at="2023-10-23T14:59:26 IST" duration-ms="13920" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.LoginTests.LoginWithInvalidCredentials()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="LoginWithInvalidCredentials()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T14:59:26 IST" name="LoginWithInvalidCredentials" finished-at="2023-10-23T14:59:30 IST" duration-ms="4039" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithInvalidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T14:59:30 IST" name="tearDown" finished-at="2023-10-23T14:59:31 IST" duration-ms="355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T14:59:31 IST" name="SetUp" finished-at="2023-10-23T14:59:52 IST" duration-ms="20939" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.LoginTests.LoginWithInvalidUsernameValidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="LoginWithInvalidUsernameValidPassword()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T14:59:52 IST" name="LoginWithInvalidUsernameValidPassword" finished-at="2023-10-23T14:59:55 IST" duration-ms="2952" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithInvalidUsernameValidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T14:59:55 IST" name="tearDown" finished-at="2023-10-23T14:59:55 IST" duration-ms="422" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T14:59:55 IST" name="SetUp" finished-at="2023-10-23T15:00:10 IST" duration-ms="14822" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.LoginTests.LoginWithValidCredential()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="LoginWithValidCredential()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T15:00:10 IST" name="LoginWithValidCredential" finished-at="2023-10-23T15:00:15 IST" duration-ms="4710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithValidCredential -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T15:00:15 IST" name="tearDown" finished-at="2023-10-23T15:00:15 IST" duration-ms="360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T15:00:15 IST" name="SetUp" finished-at="2023-10-23T15:00:34 IST" duration-ms="19010" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.LoginTests.LoginWithValidUsernameInvalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="LoginWithValidUsernameInvalidPassword()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T15:00:34 IST" name="LoginWithValidUsernameInvalidPassword" finished-at="2023-10-23T15:00:38 IST" duration-ms="3651" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithValidUsernameInvalidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T15:00:38 IST" name="tearDown" finished-at="2023-10-23T15:00:38 IST" duration-ms="449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T15:00:38 IST" name="SetUp" finished-at="2023-10-23T15:00:56 IST" duration-ms="17731" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.LoginTests.ValidateForgotpasswordLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="ValidateForgotpasswordLink()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T15:00:56 IST" name="ValidateForgotpasswordLink" finished-at="2023-10-23T15:00:57 IST" duration-ms="1648" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateForgotpasswordLink -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T15:00:57 IST" name="tearDown" finished-at="2023-10-23T15:00:58 IST" duration-ms="375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T15:00:58 IST" name="SetUp" finished-at="2023-10-23T15:01:14 IST" duration-ms="16003" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.LoginTests.ValidateLogo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="ValidateLogo()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T15:01:14 IST" name="ValidateLogo" finished-at="2023-10-23T15:01:16 IST" duration-ms="2147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateLogo -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T15:01:16 IST" name="tearDown" finished-at="2023-10-23T15:01:16 IST" duration-ms="476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T15:01:16 IST" name="SetUp" finished-at="2023-10-23T15:01:30 IST" duration-ms="13726" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.LoginTests.ValidateLogoBanner()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="ValidateLogoBanner()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T15:01:30 IST" name="ValidateLogoBanner" finished-at="2023-10-23T15:01:32 IST" duration-ms="1703" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateLogoBanner -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T15:01:32 IST" name="tearDown" finished-at="2023-10-23T15:01:32 IST" duration-ms="398" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T15:01:32 IST" name="SetUp" finished-at="2023-10-23T15:01:45 IST" duration-ms="13038" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.LoginTests.ValidateTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="ValidateTitle()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T15:01:45 IST" name="ValidateTitle" finished-at="2023-10-23T15:01:45 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateTitle -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T15:01:45 IST" name="tearDown" finished-at="2023-10-23T15:01:46 IST" duration-ms="365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T15:01:46 IST" name="SetUp" finished-at="2023-10-23T15:01:55 IST" duration-ms="9624" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.LoginTests.ValidateURL()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="ValidateURL()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T15:01:55 IST" name="ValidateURL" finished-at="2023-10-23T15:01:55 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateURL -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Tests.LoginTests@242b836]" started-at="2023-10-23T15:01:55 IST" name="tearDown" finished-at="2023-10-23T15:01:56 IST" duration-ms="387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.Tests.LoginTests -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
